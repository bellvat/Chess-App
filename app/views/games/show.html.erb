<div class="background">
  <div class= "row">
    <div class="column leftside">
      <div class="booyah-box chatbox column">
        <% @messages.each do |message| %>
          <div class = "message-box">
            <!-- NOTE: For now, I've left out the user email, as I can't think how to get this from Firebase. Would have to store everything on firebase -->
            <!-- <p class = "text-muted"><%= message.user.email %></p> -->
            <p><%= message.body %></p>
          </div>
        <% end %>

        <%= simple_form_for @message, url: game_messages_path(@game) do |f| %>
          <%= f.input :body, class: "enter-message-box", prompt: "Enter your message" %>
          <div class="chatbutton"> <%= f.submit "Send", class: "float-right btn-sm btn-chat submit-message", remote: true %> </div>
        <% end %>
      </div>

      <div class="booyah-box move-history">
        <p class="move-title"> Moves </p>
        <u class="col-4 text-right player-title"> White </u>
        <u class="col-4 text-left player-title"> Black </u>
        <div class="row">
            <% @game.moves.each_with_index do |move| %>
              <% if move.present? && move.piece_user_id == @game.white_player_user_id %>
                <div class="col-4 text-right">
                  <p class="notation"> <%= "#{move.notation(move.piece_type, move.x_coord, move.y_coord)}" %> </p>
                </div>
              <% else %>
                <div class="col-4 text-center">
                  <p class="notation">/</p>
                </div>
                <div class="col-4 text-left">
                  <p class="notation"> <%= "#{move.notation(move.piece_type, move.x_coord, move.y_coord)}" %> </p>
                </div>
              <% end %>
            <% end %>
        </div>
      </div>
    </div>


    <div class="board">
      <table>
        <tbody>
          <% (1..8).each do |y_coord| %>
            <tr id = <%= y_coord %>>
              <% (1..8).each do |x_coord| %>
                <td data-x-coord = <%= x_coord %> data-y-coord = <%= y_coord %> class = <%= "#{(y_coord % 2 == x_coord % 2 ? "white-square droppable-square" : "black-square droppable-square")}" %> >
                <% if gamepiece = @pieces.where("(x_coord = ? AND y_coord = ?)", x_coord, y_coord).first %>
                   <span><%= image_tag gamepiece.image, class: "#{gamepiece.name} selectable-piece", id: gamepiece.id %></span>
                <% end %>
                </td>
              <% end %>
            </tr>
          <% end %>
        </tbody>
      </table>
    </div>

    <div class="column rightside">
      <div class="booyah-box captured-pieces">

        <div class="captured-box">
          <% @game.pieces.where(captured: true, white: true).each do |piece| %>
            <%= image_tag piece.image, :class => "piece_cap" %>
          <% end %>

      </div>
      <div class="spacing">
        <br />
      </div>
        <div class="captured-box">

          <% @game.pieces.where(captured: true, white: false).each do |piece| %>
            <%= image_tag piece.image, :class => "piece_cap" %>
          <% end %>
        </div>
      </div>

      <% if @game.users.count > 1 %>
        <%= simple_form_for @game, url: forfeit_game_path(@game) do |f| %>
          <% if current_user.id == @game.white_player %>
            <%= f.input :winner_user_id, as: :hidden, :input_html => { :value => @game.black_player.id } %>
            <%= f.input :loser_user_id, as: :hidden, :input_html => { :value => @game.white_player.id } %>
          <% else %>
            <%= f.input :winner_user_id, as: :hidden, :input_html => { :value => @game.white_player.id } %>
            <%= f.input :loser_user_id, as: :hidden, :input_html => { :value => @game.black_player.id } %>
          <% end %>
          <span class="float-right"><%= f.submit "Forfeit", class: "forfeit btn btn-danger btn-lg" %></span>
        <% end %>
      <% end %>
    </div>
  </div>

  <% @pieces.each do |piece| %>
    <% if piece.type == "Pawn" && piece.pawn_promotion? && current_user.id == piece.user_id %>
      <!-- Pawn Promotion Modal -->
      <div class="modal" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
        <div class="modal-dialog text-center" role="document">
          <div class="modal-content">
            <div class="modal-header">
              <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                <span aria-hidden="true">×</span>
              </button>
              <h3 class="modal-title text-center" id="myModalLabel">You've Been Promoted!</h3>
            </div>
            <div class="modal-body">
              <h5 class="text-center"> Choose the piece to be promoted to: </h5>
              <br />
              <div class="row text-center">
                <%= link_to piece_path(piece, piece: {type: "Queen"}), method: :put, async: true do %>
                  <%= image_tag "Queen_black.png", class: "player-button", id: "closing"%>
                <% end %>
                <%= link_to piece_path(piece, piece: {type: "Bishop"}), method: :put, async: true do %>
                  <%= image_tag "Bishop_black.png", class: "player-button" %>
                <% end %>
                <%= link_to piece_path(piece, piece: {type: "Knight"}), method: :put, async: true do %>
                  <%= image_tag "Knight_black.png", class: "player-button" %>
                <% end %>
                <%= link_to piece_path(piece, piece: {type: "Rook"}), method: :put, async: true do %>
                  <%= image_tag "Rook_black.png", class: "player-button" %>
                <% end %>
              </div>
            </div>
          </div>
        </div>
      </div>
      <script> $('#myModal').modal('show');</script>
    <% end %>
  <% end %>

  <!-- Game End Modal -->
  <div class="modal fade show" id="gameEndModal" tabindex="-1" role="dialog" aria-labelledby="gameEndModalLabel">
    <div class="modal-dialog text-center" role="document">
      <div class="modal-content">
        <div class="modal-header">
          <button type="button" class="close" data-dismiss="modal" aria-label="Close">
            <span aria-hidden="true">×</span>
          </button>
          <h3 class="modal-title text-center" id="gameEndModalLabel">
            <% if @game.winner_user_id.present? %>
              <%= @game.winner_user_id %> has won the game!
            <% else %>
              Stalemate!
            <% end %>
          </h3>
        </div>
        <br />
        <hr />
        <div class="modal-body">
        </div>
        <div class="modal-footer">
          <button type="button" class="float-right btn btn-secondary" data-dismiss="modal">Close</button>
          <%= link_to 'Okay', games_path, :class => 'btn btn-inverse' %>
        </div>
      </div>
    </div>
  </div>
</div>

<% if @game.state == "end" %>
   <script> $('#gameEndModal').modal('show');</script>
<% end %>

<% if @game.pieces.find_by(name:"King_white").king_check == 1 || %>
  <% @game.pieces.find_by(name:"King_black").king_check == 1 %>
    <script> $("#alert_msg").addClass("alert alert-danger");
  $("#alert_msg").html('<p>'+ 'King is in check!' + '</p>')</script>
<% end %>

<script src="https://www.gstatic.com/firebasejs/4.6.2/firebase.js"></script>
<script>
  var lastMessagePageShown = <%= @messages.last.to_json.html_safe %>;
  // Initialize Firebase
  var config = {
    apiKey: "AIzaSyDUMKEQ7hnoKOhw4JzjKNylY2akSXyGsA4",
    authDomain: "chess-space.firebaseapp.com",
    databaseURL: "https://chess-space.firebaseio.com",
    projectId: "chess-space",
    storageBucket: "",
    messagingSenderId: "503457861595"
  };

  firebase.initializeApp(config);

  // Get a reference to the database service

  var database = firebase.database();
  if (lastMessagePageShown !== null){
    var messageRef = database.ref('games/' + <%= @game.id %> + '/message');
    messageRef.on('value', function(snapshot) {
      var values = snapshot.val();
      var ids = Object.keys(values);
      var lastId = ids[ids.length - 1];
      var lastMessage = values[lastId];
      if(lastMessagePageShown.id < lastMessage.id) {
        $('.all-messages').append("<div class = 'message-box'><p>" + lastMessage.body +"</p></div>")
      }
    });
  };

  var moveRef = database.ref('games/' + <%= @game.id %> + '/pieces');
  moveRef.on('value', function(snapshot) {
    var values = snapshot.val();
    var ids = Object.keys(values);
    var lastId = ids[ids.length - 1];
    var lastMove = values[lastId];
    // If update was done in the last 2 seconds (just to deal with version control, as we'll all have different game #9s, for example)
    // Or, in Tristen's case, game #24648795678349
    // And we'll all be submitting locally
    if(lastMove.timestamp > <%= Time.now.to_i - 2 %>) {
      location.reload();
    }
  });
</script>

<script>
  $( function() {
    $(".submit-message").click(function() {
      $(".enter-message-box").text("Enter your message");
    });

    //Ultimately, we'll have to assign droppable square based on piece rules and position of other pieces
    $("td").addClass("droppable-square");
    $( ".selectable-piece" ).draggable({
      cancel: "a.ui-icon", // clicking an icon won't initiate dragging
      revert: "invalid",
      containment: "document",
      snap: ".document td",
      snapTolerance: 20,
      helper: "clone",
      cursor: "move"
    });
    $( ".droppable-square").droppable({
      accept: ".selectable-piece",
      tolerance: "pointer",
      classes: {
        "ui-droppable-active": "ui-state-active",
        "ui-droppable-hover": "ui-state-hover"
      },

      drop: function( event, ui ) {
        const $newDroppableSquare = $(this)
          $.ajax({
          beforeSend: function(xhr) {
          xhr.setRequestHeader('X-CSRF-Token', $('meta[name="csrf-token"]').attr('content'))
          },
          type: "PATCH",
          dataType: 'text',
          url: "/pieces/" + ui.draggable.attr('id'),
          data: {
            piece: {
              x_coord: $(this).data("x-coord"),
              y_coord: $(this).data("y-coord")
            },
          },
          error:  function(xhr){
            var errorMessage = $.parseJSON(xhr.responseText).message
            var alertClass = $.parseJSON(xhr.responseText).class
            $("#alert_msg").addClass(alertClass)
            $("#alert_msg").html('<p>'+ errorMessage + '</p>')
          },
          success: function(){
            $newDroppableSquare.append($(ui.draggable));
          }
        });
      }
    });
  });
</script>
